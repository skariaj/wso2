<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="3f2f3233-d6a0-48d3-b2f1-e922c52a5be4" activeEnvironment="Default" name="REST Project 1" resourceRoot="" soapui-version="5.2.1" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="f9aa8dc6-98a2-47fa-8c89-cf2dbc49f205" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://localhost:8280" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://DESKTOP-J12B9A9:8089/</con:endpoint><con:endpoint>http://localhost:8280</con:endpoint></con:endpoints><con:resource name="Ent" path="/services/HealthCarePS/{category}" id="6f0461d2-e536-4212-a27c-5f5089d3ccf6"><con:settings/><con:parameters><con:parameter><con:name>category</con:name><con:value>ent</con:value><con:style>TEMPLATE</con:style><con:default>ent</con:default></con:parameter></con:parameters><con:method name="Ent" id="7a2045b7-4bcf-4a06-87d4-a1d282a93bca" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/octet-stream</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Category is Ent" id="c7df9bbf-2e81-49d6-bf3d-ea83502342ab" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8280</con:endpoint><con:request/><con:originalUri>http://localhost/services/HealthCarePS/ent</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>category</con:entry></con:parameterOrder></con:request><con:request name="Category is Surgery" id="934a6f86-8910-47af-99cd-318b81982086" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8280</con:endpoint><con:request/><con:originalUri>http://localhost/services/HealthCarePS/surgery</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="category" value="surgery" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>category</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="e985b518-4cb0-4ca6-8f9c-ee765c59a710" name="TestSuite 1"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="7fb27f02-9e54-4990-808d-c5265642571c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Category Is ent" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Ent - Category is Ent" id="43750fbd-c329-46a6-9867-66eb54fb9822"><con:settings/><con:config service="http://localhost:8280" resourcePath="/services/HealthCarePS/{category}" methodName="Ent" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Ent - Category is Ent" id="c7df9bbf-2e81-49d6-bf3d-ea83502342ab" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8280</con:endpoint><con:request/><con:originalUri>http://localhost/services/HealthCarePS/ent</con:originalUri><con:assertion type="JsonPath Match" id="506bc22c-4358-4e7a-bc0d-e5b589af0dc9" name="JsonPath Match"><con:configuration><path>[*]</path><content>[{"name":"henry parker","hospital":"grand oak community hospital","category":"ent","availability":"9.00 a.m - 11.00 a.m","fee":4500},{"name":"abner jones","hospital":"grand oak community hospital","category":"ent","availability":"8.00 a.m - 10.00 a.m","fee":6750}]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>category</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6b1c33ff-e1ec-4278-9eb9-fd363f21d496" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Category Is surgery" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Ent - Category is Surgery" id="3ddbdd3b-4b01-4be5-9271-523bbf143af6"><con:settings/><con:config service="http://localhost:8280" resourcePath="/services/HealthCarePS/{category}" methodName="Ent" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Ent - Category is Surgery" id="934a6f86-8910-47af-99cd-318b81982086" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8280</con:endpoint><con:request/><con:originalUri>http://localhost/services/HealthCarePS/surgery</con:originalUri><con:assertion type="JsonPath Match" id="aca072aa-ffe7-483d-a90b-8a78f29b6dbb" name="JsonPath Match"><con:configuration><path>[*]</path><content>[{"name":"thomas collins","hospital":"grand oak community hospital","category":"surgery","availability":"9.00 a.m - 11.00 a.m","fee":7000},{"name":"anne clement","hospital":"clemency medical center","category":"surgery","availability":"8.00 a.m - 10.00 a.m","fee":12000},{"name":"seth mears","hospital":"pine valley community hospital","category":"surgery","availability":"3.00 p.m - 5.00 p.m","fee":8000}]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="category" value="surgery" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>category</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:restMockService id="f96a03fb-f5a6-4ea4-afbb-74786aef2b2e" port="8089" path="/" host="localhost" name="REST MockService 1" docroot=""><con:settings/><con:properties/><con:restMockAction name="/services/HealthCarePS/ent" method="GET" resourcePath="/services/HealthCarePS/ent" id="87df4bbe-4697-48c1-a6de-6d7c162ee1ff"><con:settings/><con:defaultResponse xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="75bb196c-9e68-4c3d-8ba0-8dc5ba4c1b83" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>[
      {
      "name": "henry parker",
      "hospital": "grand oak community hospital",
      "category": "ent",
      "availability": "9.00 a.m - 11.00 a.m",
      "fee": 4500
   },
      {
      "name": "abner jones",
      "hospital": "grand oak community hospital",
      "category": "ent",
      "availability": "8.00 a.m - 10.00 a.m",
      "fee": 6750
   }
]
</con:responseContent></con:response></con:restMockAction><con:restMockAction name="/services/HealthCarePS/surgery" method="GET" resourcePath="/services/HealthCarePS/surgery" id="1d006be5-8790-4ab4-8f08-b9ccfa343d0a"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="8af3db27-0347-42a6-8daa-e143b9b8caaa" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>[
{"name":"thomas collins","hospital":"grand oak community hospital","category":"surgery","availability":"9.00 a.m - 11.00 a.m","fee":7000.0},
{"name":"anne clement","hospital":"clemency medical center","category":"surgery","availability":"8.00 a.m - 10.00 a.m","fee":12000.0},
{"name":"seth mears","hospital":"pine valley community hospital","category":"surgery","availability":"3.00 p.m - 5.00 p.m","fee":8000.0}
]
</con:responseContent></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:sensitiveInformation/></con:soapui-project>